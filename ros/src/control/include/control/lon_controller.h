#include "control/pid_controller.h"
#include "car_msgs/chassis.h"
#include "car_msgs/control.h"
#include "car_msgs/localization.h"
#include "car_msgs/trajectory.h"

class LonControllerConf{
    public:
        LonControllerConf(){};
        virtual ~LonControllerConf(){};

        double ts;
        PidConf station_pid_conf;
        PidConf speed_pid_conf;
};

class LonController {
 public:
  /**
   * @brief initialize Longitudinal Controller
   * @param control_conf control configurations
   * @return Status initialization status
   */
  bool Init(const LonControllerConf *control_conf);

  /**
   * @brief compute brake / throttle values based on current vehicle status
   *        and target trajectory
   * @param localization vehicle location
   * @param chassis vehicle status e.g., speed, acceleration
   * @param trajectory trajectory generated by planning
   * @param cmd control command
   * @return Status computation status
   */
  double ComputeControlCommand(
      const car_msgs::localization *localization,
      const car_msgs::chassis *chassis, const car_msgs::trajectory *trajectory,
      car_msgs::control *cmd);

  /**
   * @brief reset longitudinal controller
   * @return Status reset status
   */
  bool Reset();

  /**
   * @brief stop longitudinal controller
   */
  void Stop();

 protected:

  double ts_;
  PIDController station_pid_controller_;
  PIDController speed_pid_controller_;
};

